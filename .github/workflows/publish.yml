name: Publish Python Package

on:
  workflow_run:
    workflows: ["Tests", "Python Compatibility", "Linting"]
    types:
      - completed
    branches:
      - main

concurrency:
  group: publish-${{ github.event.workflow_run.head_sha }}
  cancel-in-progress: true

jobs:
  check-conditions:
    # Only run this job when all workflows have completed
    if: ${{ github.event.workflow_run.conclusion != 'skipped' }}
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.check-all-workflows.outputs.should_publish }}
    steps:
      - name: Check commit message
        id: check-commit
        if: contains(github.event.workflow_run.head_commit.message, 'ðŸ”–')
        run: echo "has_tag=true" >> $GITHUB_OUTPUT

      - name: Check required workflows
        id: check-all-workflows
        if: steps.check-commit.outputs.has_tag == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
          COMMIT_SHA: ${{ github.event.workflow_run.head_sha }}
          REPO: ${{ github.repository }}
        run: |
          # Get status of Tests workflow
          tests_status=$(gh api repos/$REPO/actions/workflows/tests.yml/runs \
            --jq ".workflow_runs[] | select(.head_sha == \"$COMMIT_SHA\") | .conclusion" | head -n 1)
          echo "Tests workflow status: $tests_status"

          # Get status of Python Compatibility workflow
          py_compat_status=$(gh api repos/$REPO/actions/workflows/python-versions.yml/runs \
            --jq ".workflow_runs[] | select(.head_sha == \"$COMMIT_SHA\") | .conclusion" | head -n 1)
          echo "Python Compatibility workflow status: $py_compat_status"

          # Check if both required workflows succeeded
          if [[ "$tests_status" == "success" && "$py_compat_status" == "success" ]]; then
            echo "Required workflows succeeded"
            echo "should_publish=true" >> $GITHUB_OUTPUT
          else
            echo "Required workflows did not succeed"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

  release:
    needs: check-conditions
    if: needs.check-conditions.outputs.should_publish == 'true'
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: https://pypi.org/project/fastgear/

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build package
        run: poetry build

      - name: Publish to PyPI
        run: poetry publish --no-interaction --username __token__ --password ${{ secrets.PYPI_TOKEN }}
